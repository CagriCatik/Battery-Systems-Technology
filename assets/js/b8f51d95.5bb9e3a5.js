"use strict";(self.webpackChunkBMS=self.webpackChunkBMS||[]).push([[4871],{7001:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"glossary/C","title":"C","description":"- Controller Area Network (CAN) Bus: A robust vehicle bus standard designed to allow microcontrollers and devices to communicate with each other without a host computer.","source":"@site/docs/glossary/C.md","sourceDirName":"glossary","slug":"/glossary/C","permalink":"/Battery-Systems-Technology/docs/glossary/C","draft":false,"unlisted":false,"editUrl":"https://github.com/CagriCatik/Battery-Systems-Technology/edit/main/docs/glossary/C.md","tags":[],"version":"current","frontMatter":{},"sidebar":"glossarySidebar","previous":{"title":"B","permalink":"/Battery-Systems-Technology/docs/glossary/B"},"next":{"title":"D","permalink":"/Battery-Systems-Technology/docs/glossary/D"}}');var o=s(4848),r=s(8453);const c={},i="C",l={},a=[];function d(e){const t={h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"c",children:"C"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Controller Area Network (CAN) Bus"}),": A robust vehicle bus standard designed to allow microcontrollers and devices to communicate with each other without a host computer."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Coulomb Counting"}),": A method for determining SoC by integrating current over time."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Cathode"}),": The positive electrode of a battery where reduction occurs."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>i});var n=s(6540);const o={},r=n.createContext(o);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);