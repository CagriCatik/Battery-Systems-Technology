"use strict";(self.webpackChunkBMS=self.webpackChunkBMS||[]).push([[5058],{4426:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"theory/modeling_testing/matlab/unit-testing","title":"Unit Testing","description":"1. Introduction to Unit Testing","source":"@site/docs/theory/10_modeling_testing/03_matlab/04_unit-testing.md","sourceDirName":"theory/10_modeling_testing/03_matlab","slug":"/theory/modeling_testing/matlab/unit-testing","permalink":"/Battery-Systems-Technology/docs/theory/modeling_testing/matlab/unit-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/CagriCatik/Battery-Systems-Technology/edit/main/docs/theory/10_modeling_testing/03_matlab/04_unit-testing.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"modelingTestingSidebar","previous":{"title":"Managing Requirements","permalink":"/Battery-Systems-Technology/docs/theory/modeling_testing/matlab/requirements"},"next":{"title":"Managing Tests in Simulink","permalink":"/Battery-Systems-Technology/docs/theory/modeling_testing/matlab/managing_tests"}}');var i=s(4848),r=s(8453);const l={},o="Unit Testing",a={},d=[{value:"<strong>1. Introduction to Unit Testing</strong>",id:"1-introduction-to-unit-testing",level:2},{value:"<strong>2. Creating a Test Harness in Simulink</strong>",id:"2-creating-a-test-harness-in-simulink",level:2},{value:"<strong>2.1 Test Harness Setup</strong>",id:"21-test-harness-setup",level:3},{value:"<strong>2.2 Example: Signal Builder for Inputs</strong>",id:"22-example-signal-builder-for-inputs",level:3},{value:"<strong>3. Manual Testing with Dashboards</strong>",id:"3-manual-testing-with-dashboards",level:2},{value:"<strong>3.1 Dashboard Block Integration</strong>",id:"31-dashboard-block-integration",level:3},{value:"<strong>3.2 Saving Simulation Data</strong>",id:"32-saving-simulation-data",level:3},{value:"<strong>4. Automating Tests with Recorded Data</strong>",id:"4-automating-tests-with-recorded-data",level:2},{value:"<strong>4.1 Replay Test Scenarios</strong>",id:"41-replay-test-scenarios",level:3},{value:"<strong>4.2 Batch Execution</strong>",id:"42-batch-execution",level:3},{value:"<strong>5. Key Tools and Workflow</strong>",id:"5-key-tools-and-workflow",level:2},{value:"<strong>5.1 Simulink Test Features</strong>",id:"51-simulink-test-features",level:3},{value:"<strong>5.2 Workflow Summary</strong>",id:"52-workflow-summary",level:3},{value:"<strong>6. Benefits of Unit Testing in Simulink</strong>",id:"6-benefits-of-unit-testing-in-simulink",level:2},{value:"<strong>Summary</strong>",id:"summary",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"unit-testing",children:"Unit Testing"})}),"\n",(0,i.jsx)(n.h2,{id:"1-introduction-to-unit-testing",children:(0,i.jsx)(n.strong,{children:"1. Introduction to Unit Testing"})}),"\n",(0,i.jsx)(n.p,{children:"Unit testing is a critical step in validating individual components of a Battery Management System (BMS), such as the state machine or balancing logic, to ensure they meet specified requirements. Key objectives of unit testing include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Isolate Components"}),": Test specific logic without external dependencies to ensure accurate results."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inject Test Inputs"}),": Simulate real-world scenarios (e.g., voltage spikes, temperature faults) to evaluate component behavior."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Verify Outputs"}),": Validate responses against expected behavior to confirm compliance with design requirements."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"2-creating-a-test-harness-in-simulink",children:(0,i.jsx)(n.strong,{children:"2. Creating a Test Harness in Simulink"})}),"\n",(0,i.jsx)(n.h3,{id:"21-test-harness-setup",children:(0,i.jsx)(n.strong,{children:"2.1 Test Harness Setup"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Navigate to Simulink Test"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Open the BMS model (e.g., the state machine component)."}),"\n",(0,i.jsxs)(n.li,{children:["Go to the ",(0,i.jsx)(n.em,{children:"Simulink Toolstrip > Apps > Simulink Test"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Generate Test Harness"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.em,{children:"Add Test Harness"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Name the harness (e.g., ",(0,i.jsx)(n.code,{children:"StateMachine_Test"}),") and specify its storage location."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Configure Inputs/Outputs"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Input Sources"}),": Use Signal Builder, Signal Editor, or workspace variables to define test inputs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Output Sinks"}),": Log results using scopes, MATLAB workspace, or files for analysis."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"22-example-signal-builder-for-inputs",children:(0,i.jsx)(n.strong,{children:"2.2 Example: Signal Builder for Inputs"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Define Test Scenarios"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use Signal Builder to create custom input waveforms (e.g., step changes in voltage or temperature)."}),"\n",(0,i.jsxs)(n.li,{children:["Example: Inject ",(0,i.jsx)(n.code,{children:"cell_voltage = 6V"})," to simulate a fault condition."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Output Configuration"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Log results to the workspace using ",(0,i.jsx)(n.code,{children:"To Workspace"})," blocks or visualize outputs in real time using scopes."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"3-manual-testing-with-dashboards",children:(0,i.jsx)(n.strong,{children:"3. Manual Testing with Dashboards"})}),"\n",(0,i.jsx)(n.h3,{id:"31-dashboard-block-integration",children:(0,i.jsx)(n.strong,{children:"3.1 Dashboard Block Integration"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add Dashboard Components"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Insert interactive components such as switches, knobs, and gauges into the test harness."}),"\n",(0,i.jsxs)(n.li,{children:["Example: Use a ",(0,i.jsx)(n.strong,{children:"Slider"})," to dynamically adjust cell voltage during simulation."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Run Interactive Simulations"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Start the simulation and manually adjust inputs (e.g., set ",(0,i.jsx)(n.code,{children:"cell_voltage = 6V"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"Observe outputs in real time (e.g., fault activation) to validate component behavior."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"32-saving-simulation-data",children:(0,i.jsx)(n.strong,{children:"3.2 Saving Simulation Data"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Export to Workspace"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"After stopping the simulation, access logged data in the MATLAB workspace."}),"\n",(0,i.jsxs)(n.li,{children:["Save the dataset for future use (e.g., ",(0,i.jsx)(n.code,{children:"fault_scenario.mat"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-matlab",children:"save('fault_scenario.mat', 'simulation_output');  \n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"4-automating-tests-with-recorded-data",children:(0,i.jsx)(n.strong,{children:"4. Automating Tests with Recorded Data"})}),"\n",(0,i.jsx)(n.h3,{id:"41-replay-test-scenarios",children:(0,i.jsx)(n.strong,{children:"4.1 Replay Test Scenarios"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Signal Editor"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Replace Signal Builder with ",(0,i.jsx)(n.strong,{children:"Signal Editor"})," in the test harness."]}),"\n",(0,i.jsxs)(n.li,{children:["Load saved datasets (e.g., ",(0,i.jsx)(n.code,{children:"fault_scenario.mat"}),") to replay specific test scenarios."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modify Scenarios"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Duplicate or edit datasets to create new test cases (e.g., adjust voltage thresholds or temperature profiles)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"42-batch-execution",children:(0,i.jsx)(n.strong,{children:"4.2 Batch Execution"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automate Simulations"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the ",(0,i.jsx)(n.code,{children:"sim"})," function in MATLAB to run multiple test scenarios programmatically."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-matlab",children:"testScenarios = {'fault_scenario.mat', 'normal_operation.mat'};  \nfor i = 1:length(testScenarios)  \n    load(testScenarios{i});  \n    sim('StateMachine_Test');  \nend  \n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"5-key-tools-and-workflow",children:(0,i.jsx)(n.strong,{children:"5. Key Tools and Workflow"})}),"\n",(0,i.jsx)(n.h3,{id:"51-simulink-test-features",children:(0,i.jsx)(n.strong,{children:"5.1 Simulink Test Features"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Harness Navigation"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use badges (\ud83d\udd17) to toggle between the component under test and its harness."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Input/Output Blocks"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Signal Builder"}),": Design custom input waveforms for specific test cases."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Signal Editor"}),": Replay pre-recorded datasets for regression testing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scope"}),": Visualize outputs in real time during simulation."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"52-workflow-summary",children:(0,i.jsx)(n.strong,{children:"5.2 Workflow Summary"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Isolate Component"}),": Select the BMS logic (e.g., state machine) to be tested."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Create Harness"}),": Define inputs and outputs using Simulink Test."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Test Manually"}),": Use dashboards for interactive validation of component behavior."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automate"}),": Reuse saved datasets for regression testing and batch execution."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"6-benefits-of-unit-testing-in-simulink",children:(0,i.jsx)(n.strong,{children:"6. Benefits of Unit Testing in Simulink"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Early Fault Detection"}),": Identify issues such as over-voltage or over-temperature conditions before hardware deployment."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reproducibility"}),": Replay edge cases (e.g., 40\xb0C ambient temperature, 30% initial SOC) to ensure consistent behavior."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Certification Readiness"}),": Align with standards like ISO 26262 by documenting test coverage and ensuring compliance."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:(0,i.jsx)(n.strong,{children:"Summary"})}),"\n",(0,i.jsx)(n.p,{children:"Unit testing BMS software in Simulink involves:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Creating Test Harnesses"}),": Isolate components (e.g., state machines) for focused testing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Injecting Inputs"}),": Use dashboards or pre-recorded datasets to simulate real-world scenarios."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automating Validation"}),": Leverage Signal Editor and batch scripts for efficient regression testing."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);